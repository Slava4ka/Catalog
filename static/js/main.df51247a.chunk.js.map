{"version":3,"sources":["Components/common/ProductCard/ProductCard.module.scss","Components/common/style/commonStyle.module.scss","Components/Header/Header.module.scss","Components/MessageBox/MessageBox.module.scss","Components/common/MySpinner/MySpinner.module.scss","Components/Cart/Cart.module.scss","store/types.ts","store/catalog/catalog-reducer.ts","store/message/message-reducer.ts","store/cart/cart-reducer.ts","store/store.ts","utils/api.ts","store/catalog/action.ts","Components/common/ProductCard/ProductCard.tsx","Components/common/MySpinner/MySpinner.tsx","store/cart/action.ts","Components/Catalog/Catalog.tsx","store/message/action.ts","Components/Header/Header.tsx","Components/Cart/CartItem.tsx","Components/Cart/Cart.tsx","Components/common/MyMessage/MyMessage.tsx","Components/MessageBox/MessageBox.tsx","Components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","catalogActionTypes","initialState","isFetching","productsList","errors","catalogReducer","state","action","type","FETCH_PRODUCTS","payload","TOGGLE_IS_FETCHING","FETCH_ERROR","message","push","messages","newMessage","id","length","text","time","isVisible","remove","filter","m","messageReducer","ADD_MESSAGE","SET_VISIBILITY","productsCounter","products","totalPrice","add","catalog","find","item","product","itemFromCatalog","quantity","map","p","dropItem","countTotalPrice","console","log","price","reduce","sum","current","dropItemFromTotalCount","count","currentCount","cartReducer","ADD_ITEM","REMOVE_ONE_ITEM","DROP_ITEM","COUNT_TOTAL_PRICE","DROP_CART","cartPersistConfig","key","storage","reducers","combineReducers","cartPersist","persistReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","fetchProductsList","a","async","fetch","method","headers","Accept","res","json","setToggleIsFetching","ProductCard","name","image","sendMessage","addToCart","history","useHistory","useState","clickStatus","setClickStatus","className","style","productCard","container","container__img","src","toString","alt","container__name","container__price","replace","container__button","Button","variant","size","block","onClick","MySpinner","Spinner","position","animation","countTotalPriceAction","dispatch","addItemAction","getState","mapDispatchToProps","getProducts","asyncResp","items","error","showMessage","messageText","connect","props","useEffect","Container","title_margin","Row","Col","md","sm","xs","col_margin","Navbar","header","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","navbarCollapse","Nav","Link","Badge","badge","CartItem","removeFromCart","dropFromCart","cartStyle","item__image","item__name","quantity_control","quantity_control__value","noPadding","item__price","item__trash","OverlayTrigger","placement","overlay","Tooltip","removeItemAction","dropItemAction","dropCart","itemsList_margin","index","bottomRow_margin","send","emptyCart","MyMessage","showA","toggleShowA","date","Date","Toast","show","onClose","delay","autohide","Header","getHours","getMinutes","toLocaleDateString","Body","hideMessage","messageId","messageBox","messageBox_none","i","toLocaleString","AppContainer","withRouter","path","render","AppDone","loading","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df51247a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"productCard\":\"ProductCard_productCard__3HKJ8\",\"container\":\"ProductCard_container__16Wal\",\"container__img\":\"ProductCard_container__img__2w0HF\",\"container__name\":\"ProductCard_container__name__7WAhW\",\"container__price\":\"ProductCard_container__price__1QphM\",\"container__button\":\"ProductCard_container__button__39KM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col_margin\":\"commonStyle_col_margin__28xKH\",\"title_margin\":\"commonStyle_title_margin__2hvRu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__tPodg\",\"badge\":\"Header_badge__kPcPJ\",\"navbarCollapse\":\"Header_navbarCollapse__384NQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBox\":\"MessageBox_messageBox__3aVdY\",\"messageBox_none\":\"MessageBox_messageBox_none__2SzU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"MySpinner_position__2hG0e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Cart_item__beAxc\",\"totalPrice\":\"Cart_totalPrice__2UUEb\",\"itemsList_margin\":\"Cart_itemsList_margin__2xL-Z\",\"emptyCart\":\"Cart_emptyCart__AqdQa\",\"noPadding\":\"Cart_noPadding__21BwN\",\"item__image\":\"Cart_item__image__13IDg\",\"item__name\":\"Cart_item__name__3bARx\",\"quantity_control\":\"Cart_quantity_control__3VYVN\",\"quantity_control__value\":\"Cart_quantity_control__value__25sSZ\",\"item__price\":\"Cart_item__price__1t7tZ\",\"item__trash\":\"Cart_item__trash__L14Br\",\"bottomRow_margin\":\"Cart_bottomRow_margin__1DrQ1\",\"send\":\"Cart_send__1alMD\"};","export enum catalogActionTypes {\r\n\tFETCH_PRODUCTS = '@@catalog/FETCH_PRODUCTS',\r\n\tFETCH_ERROR = '@@catalog/FETCH_ERROR',\r\n\tTOGGLE_IS_FETCHING = '@@catalog/TOGGLE_IS_FETCHING',\r\n\tADD_MESSAGE = '@@message/ADD_MESSAGE',\r\n\tSET_VISIBILITY = '@@message/SET_VISIBILITY',\r\n\tADD_ITEM = '@@cart/ADD_ITEM',\r\n\tREMOVE_ONE_ITEM = '@@cart/REMOVE_ONE_ITEM',\r\n\tDROP_ITEM = '@@cart/DROP_ITEM',\r\n\tCOUNT_TOTAL_PRICE = '@@cart/COUNT_TOTAL_PRICE',\r\n\tDROP_CART = '@@cart/DROP_CART'\r\n}\r\n\r\nexport interface Product {\r\n\tid: number\r\n\timage: string\r\n\tname: string\r\n\tprice: number\r\n}\r\n\r\nexport interface CardProduct {\r\n\tid: number\r\n\timage: string\r\n\tname: string\r\n\tprice: number\r\n\tsendMessage: (text: string) => any\r\n\taddToCart: (id: number) => any\r\n}\r\n\r\nexport interface CatalogState {\r\n\treadonly isFetching: boolean\r\n\treadonly productsList: Array<Product>\r\n\treadonly errors?: string\r\n}\r\n\r\nexport interface CartPosition {\r\n\tproduct: Product\r\n\tquantity: number\r\n}\r\n\r\nexport interface CartState {\r\n\treadonly productsCounter: number\r\n\treadonly products: Array<CartPosition>\r\n\treadonly totalPrice: number\r\n\treadonly errors?: string\r\n}\r\n\r\nexport interface Message {\r\n\tid: number\r\n\ttext: string\r\n\ttime: number\r\n\tisVisible: boolean\r\n}\r\n\r\nexport interface MessageState {\r\n\treadonly message: Array<Message>\r\n}\r\n\r\nexport type messageType = Message\r\n","import { CatalogState, catalogActionTypes, Product } from '../types'\r\nimport { Reducer } from 'redux'\r\n\r\nconst initialState: CatalogState = {\r\n\tisFetching: false,\r\n\tproductsList: [],\r\n\terrors: ''\r\n}\r\n\r\nconst catalogReducer: Reducer<CatalogState> = (\r\n\tstate = initialState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase catalogActionTypes.FETCH_PRODUCTS: {\r\n\t\t\treturn { ...state, productsList: action.payload }\r\n\t\t}\r\n\t\tcase catalogActionTypes.TOGGLE_IS_FETCHING: {\r\n\t\t\treturn { ...state, isFetching: !state.isFetching }\r\n\t\t}\r\n\t\tcase catalogActionTypes.FETCH_ERROR: {\r\n\t\t\treturn { ...state, errors: action.payload }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default catalogReducer\r\n","import { catalogActionTypes, MessageState, messageType } from '../types'\r\nimport { Reducer } from 'redux'\r\n\r\nconst initialState: MessageState = {\r\n\tmessage: []\r\n}\r\n\r\nconst push = (\r\n\tmessages: messageType[],\r\n\tnewMessage: messageType\r\n): messageType[] => {\r\n\treturn [\r\n\t\t...messages,\r\n\t\t{\r\n\t\t\tid: messages.length,\r\n\t\t\ttext: newMessage.text,\r\n\t\t\ttime: newMessage.time,\r\n\t\t\tisVisible: true\r\n\t\t}\r\n\t]\r\n}\r\n\r\nconst remove = (messages: messageType[], id: number): messageType[] => {\r\n\treturn messages.filter(m => m.id !== id)\r\n}\r\n\r\nconst messageReducer: Reducer<MessageState> = (\r\n\tstate = initialState,\r\n\taction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase catalogActionTypes.ADD_MESSAGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: push(state.message, action.payload)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase catalogActionTypes.SET_VISIBILITY: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: remove(state.message, action.payload)\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default messageReducer\r\n","import { CartPosition, CartState, catalogActionTypes, Product } from '../types'\r\nimport { Reducer } from 'redux'\r\n\r\nconst initialState: CartState = {\r\n\tproductsCounter: 0,\r\n\tproducts: [],\r\n\ttotalPrice: 0,\r\n\terrors: ''\r\n}\r\n\r\ntype ProductToCart = Product | undefined\r\ntype ProductInCart = CartPosition | undefined\r\n\r\nconst add = (\r\n\tproducts: Array<CartPosition>,\r\n\tid: number,\r\n\tcatalog: Array<Product>\r\n): Array<CartPosition> => {\r\n\tconst itemFromCart: ProductInCart = products.find(item => {\r\n\t\treturn item.product.id === id\r\n\t})\r\n\tif (typeof itemFromCart === 'undefined') {\r\n\t\tconst itemFromCatalog: ProductToCart = catalog.find(item => {\r\n\t\t\treturn item.id === id\r\n\t\t})\r\n\t\tif (typeof itemFromCatalog === 'undefined') {\r\n\t\t\treturn [...products]\r\n\t\t} else {\r\n\t\t\treturn [...products, { product: itemFromCatalog, quantity: 1 }]\r\n\t\t}\r\n\t} else {\r\n\t\treturn products.map(item => {\r\n\t\t\tif (item.product.id === id) {\r\n\t\t\t\treturn { ...item, quantity: item.quantity + 1 }\r\n\t\t\t} else return item\r\n\t\t})\r\n\t}\r\n}\r\n\r\nconst remove = (\r\n\tproducts: Array<CartPosition>,\r\n\tid: number\r\n): Array<CartPosition> => {\r\n\treturn products\r\n\t\t.map(item => {\r\n\t\t\tif (item.product.id === id) {\r\n\t\t\t\treturn { ...item, quantity: item.quantity - 1 }\r\n\t\t\t} else return item\r\n\t\t})\r\n\t\t.filter(p => p.quantity > 0)\r\n}\r\n\r\nconst dropItem = (\r\n\tproducts: Array<CartPosition>,\r\n\tid: number\r\n): Array<CartPosition> => {\r\n\treturn products.filter(item => item.product.id !== id)\r\n}\r\n\r\nconst countTotalPrice = (products: Array<CartPosition>): number => {\r\n\tconsole.log(products)\r\n\tif (!products.length) {\r\n\t\treturn 0\r\n\t} else {\r\n\t\treturn products\r\n\t\t\t.map(p => p.product.price * p.quantity)\r\n\t\t\t.reduce((sum, current) => sum + current)\r\n\t}\r\n}\r\n\r\nconst dropItemFromTotalCount = (\r\n\tcount: number,\r\n\tid: number,\r\n\tproducts: Array<CartPosition>\r\n): number => {\r\n\tconst currentCount = products.find(p => p.product.id === id)\r\n\tif (typeof currentCount === 'undefined') {\r\n\t\treturn count\r\n\t} else {\r\n\t\treturn count - currentCount.quantity\r\n\t}\r\n}\r\n\r\nconst cartReducer: Reducer<CartState> = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase catalogActionTypes.ADD_ITEM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tproductsCounter: state.productsCounter + 1,\r\n\t\t\t\tproducts: add(state.products, action.payload.id, action.payload.catalog)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase catalogActionTypes.REMOVE_ONE_ITEM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tproductsCounter: state.productsCounter - 1,\r\n\t\t\t\tproducts: remove(state.products, action.payload)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase catalogActionTypes.DROP_ITEM: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tproductsCounter: dropItemFromTotalCount(\r\n\t\t\t\t\tstate.productsCounter,\r\n\t\t\t\t\taction.payload,\r\n\t\t\t\t\tstate.products\r\n\t\t\t\t),\r\n\t\t\t\tproducts: dropItem(state.products, action.payload)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase catalogActionTypes.COUNT_TOTAL_PRICE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalPrice: countTotalPrice(state.products)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase catalogActionTypes.DROP_CART: {\r\n\t\t\treturn initialState\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport default cartReducer\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport catalogReducer from './catalog/catalog-reducer'\r\nimport { CartState, CatalogState, MessageState } from './types'\r\nimport messageReducer from './message/message-reducer'\r\nimport cartReducer from './cart/cart-reducer'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\n\r\nconst cartPersistConfig = {\r\n\tkey: 'cartStore',\r\n\tstorage\r\n}\r\n\r\nexport interface ApplicationState {\r\n\tcatalog: CatalogState\r\n\tmessages: MessageState\r\n\tcartPersist: CartState\r\n\t//cart: CartState\r\n}\r\n\r\nconst reducers = combineReducers({\r\n\tcatalog: catalogReducer,\r\n\tmessages: messageReducer,\r\n\tcartPersist: persistReducer(cartPersistConfig, cartReducer)\r\n\t//cart: cartReducer\r\n})\r\n\r\n// Добавил composeEnhancers для работы приложения Redux dev tools\r\ndeclare global {\r\n\tinterface Window {\r\n\t\t// eslint-disable-next-line no-undef\r\n\t\t__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n\t}\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst store = createStore(\r\n\treducers,\r\n\tcomposeEnhancers(applyMiddleware(thunkMiddleware))\r\n)\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default store\r\n","export async function fetchProductsList() {\r\n\tconsole.log('in')\r\n\tconst res = await fetch('https://appevent.ru/dev/task1/catalog', {\r\n\t\tmethod: 'get',\r\n\t\theaders: {\r\n\t\t\tAccept: 'application/json'\r\n\t\t}\r\n\t})\r\n\treturn res.json()\r\n}\r\n","import { catalogActionTypes, Product } from '../types'\r\nimport { action } from 'typesafe-actions'\r\nimport { ThunkAction } from 'redux-thunk'\r\nimport { ApplicationState } from '../store'\r\nimport { Action } from 'redux'\r\nimport { fetchProductsList } from '../../utils/api'\r\n\r\nconst getProductsList = (items: Product[]) =>\r\n\taction(catalogActionTypes.FETCH_PRODUCTS, items)\r\n\r\nconst setToggleIsFetching = () => action(catalogActionTypes.TOGGLE_IS_FETCHING)\r\n\r\nconst setError = (error: string) =>\r\n\taction(catalogActionTypes.FETCH_ERROR, error)\r\n\r\nexport const getProducts = (): ThunkAction<\r\n\tvoid,\r\n\tApplicationState,\r\n\tnull,\r\n\tAction<string>\r\n> => async dispatch => {\r\n\tdispatch(setToggleIsFetching())\r\n\ttry {\r\n\t\tconst asyncResp = await fetchProductsList()\r\n\t\tdispatch(getProductsList(asyncResp.items))\r\n\t} catch (e) {\r\n\t\tsetError('Возникла ошибка')\r\n\t\tthrow e\r\n\t}\r\n\tdispatch(setToggleIsFetching())\r\n}\r\n","import React, { useState } from 'react'\r\nimport style from './ProductCard.module.scss'\r\nimport { CardProduct } from '../../../store/types'\r\nimport { Button } from 'react-bootstrap'\r\nimport { FaRubleSign } from 'react-icons/fa'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst ProductCard: React.FC<CardProduct> = ({\r\n\tid,\r\n\tprice,\r\n\tname,\r\n\timage,\r\n\tsendMessage,\r\n\taddToCart\r\n}: CardProduct) => {\r\n\tconst history = useHistory()\r\n\tconst [clickStatus, setClickStatus] = useState<boolean>(false)\r\n\r\n\tconst onClickHandle = () => {\r\n\t\tif (clickStatus) {\r\n\t\t\thistory.push('/cart')\r\n\t\t} else {\r\n\t\t\taddToCart(id)\r\n\t\t\tsendMessage(`${name} успешно добавлен в корзину`)\r\n\t\t\tsetClickStatus(true)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={style.productCard}>\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<div className={style.container__img}>\r\n\t\t\t\t\t<img src={image.toString()} alt={name} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={style.container__name}>{name}</div>\r\n\t\t\t\t<div className={style.container__price}>\r\n\t\t\t\t\t{price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}{' '}\r\n\t\t\t\t\t<FaRubleSign />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={style.container__button}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"dark\"\r\n\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\tblock\r\n\t\t\t\t\t\tonClick={() => onClickHandle()}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{clickStatus ? 'Оформить заказ' : 'Добавить в корзину'}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProductCard\r\n","import React from 'react'\r\nimport style from './MySpinner.module.scss'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst MySpinner: React.FC = () => {\r\n\treturn <Spinner className={style.position} animation=\"border\" />\r\n}\r\n\r\nexport default MySpinner\r\n","import { action } from 'typesafe-actions'\r\nimport { catalogActionTypes, Product } from '../types'\r\nimport { Action, ActionCreator } from 'redux'\r\nimport store, { ApplicationState } from '../store'\r\nimport { ThunkAction } from 'redux-thunk'\r\n\r\nconst addItemAction = (id: number, catalog: Array<Product>) => {\r\n\treturn action(catalogActionTypes.ADD_ITEM, { id, catalog })\r\n}\r\n\r\nconst removeItemAction = (id: number) => {\r\n\treturn action(catalogActionTypes.REMOVE_ONE_ITEM, id)\r\n}\r\n\r\nconst dropItemAction = (id: number) => {\r\n\treturn action(catalogActionTypes.DROP_ITEM, id)\r\n}\r\n\r\nconst countTotalPriceAction = () => {\r\n\treturn action(catalogActionTypes.COUNT_TOTAL_PRICE)\r\n}\r\n\r\nconst dropCartAction = () => {\r\n\treturn action(catalogActionTypes.DROP_CART)\r\n}\r\n\r\nexport const addToCart = (\r\n\tid: number\r\n): ThunkAction<void, ApplicationState, null, Action<string>> => dispatch => {\r\n\tdispatch(addItemAction(id, store.getState().catalog.productsList))\r\n\tdispatch(countTotalPriceAction())\r\n}\r\n\r\nexport const removeFromCart = (\r\n\tid: number\r\n): ThunkAction<void, ApplicationState, null, Action<string>> => dispatch => {\r\n\tdispatch(removeItemAction(id))\r\n\tdispatch(countTotalPriceAction())\r\n}\r\n\r\nexport const dropFromCart = (\r\n\tid: number\r\n): ThunkAction<void, ApplicationState, null, Action<string>> => dispatch => {\r\n\tdispatch(dropItemAction(id))\r\n\tdispatch(countTotalPriceAction())\r\n}\r\n\r\nexport const dropCart: ActionCreator<Action> = () => {\r\n\treturn dropCartAction()\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getProducts } from '../../store/catalog/action'\r\nimport { Product } from '../../store/types'\r\nimport { ApplicationState } from '../../store/store'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { messageToState } from '../../store/message/action'\r\nimport style from '../common/style/commonStyle.module.scss'\r\nimport ProductCard from '../common/ProductCard/ProductCard'\r\nimport MySpinner from '../common/MySpinner/MySpinner'\r\nimport { addToCart } from '../../store/cart/action'\r\n\r\ninterface PropsFromDispatch {\r\n\tgetProducts: any\r\n\tshowMessage: (text: string) => any\r\n\taddToCart: (id: number) => any\r\n}\r\n\r\ninterface PropsFromState {\r\n\tisFetching: boolean\r\n\tproductsList: Array<Product>\r\n}\r\n\r\ntype AllProps = PropsFromState & PropsFromDispatch\r\n\r\nconst Catalog: React.FC<AllProps> = (props: AllProps) => {\r\n\tconst {\r\n\t\tisFetching,\r\n\t\tproductsList,\r\n\t\tgetProducts,\r\n\t\tshowMessage,\r\n\t\taddToCart\r\n\t} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProducts()\r\n\t}, [])\r\n\r\n\treturn isFetching ? (\r\n\t\t<MySpinner />\r\n\t) : (\r\n\t\t<Container>\r\n\t\t\t<h1 className={style.title_margin}>Каталог</h1>\r\n\t\t\t<Row>\r\n\t\t\t\t{productsList.map(product => (\r\n\t\t\t\t\t<Col\r\n\t\t\t\t\t\tmd={4}\r\n\t\t\t\t\t\tsm={6}\r\n\t\t\t\t\t\txs={12}\r\n\t\t\t\t\t\tkey={product.id.toString() + product.image.toString()}\r\n\t\t\t\t\t\tclassName={style.col_margin}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ProductCard\r\n\t\t\t\t\t\t\tid={product.id}\r\n\t\t\t\t\t\t\timage={product.image}\r\n\t\t\t\t\t\t\tname={product.name}\r\n\t\t\t\t\t\t\tprice={product.price}\r\n\t\t\t\t\t\t\tsendMessage={showMessage}\r\n\t\t\t\t\t\t\taddToCart={addToCart}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t))}\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ catalog }: ApplicationState) => ({\r\n\tisFetching: catalog.isFetching,\r\n\tproductsList: catalog.productsList\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\tgetProducts: getProducts,\r\n\tshowMessage: messageToState,\r\n\taddToCart: addToCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Catalog)\r\n","import { action } from 'typesafe-actions'\r\nimport { catalogActionTypes } from '../types'\r\nimport { Action, ActionCreator } from 'redux'\r\n\r\nconst addMessage = (text: string, time: number) => {\r\n\treturn action(catalogActionTypes.ADD_MESSAGE, { text, time })\r\n}\r\n\r\nconst hideMessage = (id: number) => {\r\n\treturn action(catalogActionTypes.SET_VISIBILITY, id)\r\n}\r\n\r\nexport const messageToState: ActionCreator<Action> = (messageText: string) => {\r\n\treturn addMessage(messageText, 5000)\r\n}\r\n\r\nexport const hideMessageInState: ActionCreator<Action> = (\r\n\tmessageId: number\r\n) => {\r\n\treturn hideMessage(messageId)\r\n}\r\n","import React from 'react'\r\nimport style from './Header.module.scss'\r\nimport { Badge, Nav, Navbar } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { ApplicationState } from '../../store/store'\r\n\r\ninterface PropsFromState {\r\n\tproductsCounter: number\r\n}\r\n\r\nconst Header: React.FC<PropsFromState> = (props: PropsFromState) => {\r\n\treturn (\r\n\t\t<Navbar\r\n\t\t\tclassName={style.header}\r\n\t\t\tcollapseOnSelect\r\n\t\t\texpand=\"sm\"\r\n\t\t\tbg=\"light \"\r\n\t\t\tvariant=\"light\"\r\n\t\t>\r\n\t\t\t<Navbar.Brand href=\"#home\">Catalog-App</Navbar.Brand>\r\n\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t<Navbar.Collapse\r\n\t\t\t\tclassName={style.navbarCollapse}\r\n\t\t\t\tid=\"responsive-navbar-nav\"\r\n\t\t\t>\r\n\t\t\t\t<Nav>\r\n\t\t\t\t\t<Nav.Link href=\"#catalog\">Каталог</Nav.Link>\r\n\t\t\t\t\t<Nav.Link href=\"#cart\">\r\n\t\t\t\t\t\tКорзина\r\n\t\t\t\t\t\t<Badge className={style.badge} variant=\"dark\">\r\n\t\t\t\t\t\t\t{props.productsCounter}\r\n\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Navbar.Collapse>\r\n\t\t</Navbar>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ cartPersist }: ApplicationState) => ({\r\n\tproductsCounter: cartPersist.productsCounter\r\n})\r\n\r\nconst mapDispatchToProps = {}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport cartStyle from './Cart.module.scss'\r\nimport { Button, Col, OverlayTrigger, Row, Tooltip } from 'react-bootstrap'\r\nimport { GoDash, GoPlus } from 'react-icons/go'\r\nimport { FaRubleSign } from 'react-icons/fa'\r\nimport { FiTrash2 } from 'react-icons/fi'\r\nimport { CartPosition } from '../../store/types'\r\n\r\ninterface CartItemPattern {\r\n\titem: CartPosition\r\n\taddToCart: (id: number) => any\r\n\tremoveFromCart: (id: number) => any\r\n\tdropFromCart: (id: number) => any\r\n}\r\n\r\nconst CartItem: React.FC<CartItemPattern> = (props: CartItemPattern) => {\r\n\tconst {\r\n\t\titem: { product, quantity },\r\n\t\taddToCart,\r\n\t\tremoveFromCart,\r\n\t\tdropFromCart\r\n\t} = props\r\n\r\n\treturn (\r\n\t\t<Row className={cartStyle.item}>\r\n\t\t\t<Col md={2} sm={12} xs={12}>\r\n\t\t\t\t<div className={cartStyle.item__image}>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={product.image.toString()}\r\n\t\t\t\t\t\talt={`image of ${product.name}`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t\t<Col md={4} sm={12} xs={12}>\r\n\t\t\t\t<div className={cartStyle.item__name}>{product.name}</div>\r\n\t\t\t</Col>\r\n\t\t\t<Col md={3} sm={12} xs={12}>\r\n\t\t\t\t<div className={cartStyle.quantity_control}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"outline-dark\"\r\n\t\t\t\t\t\tonClick={() => removeFromCart(product.id)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<GoDash />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<div className={cartStyle.quantity_control__value}>{quantity}</div>\r\n\t\t\t\t\t<Button variant=\"outline-dark\" onClick={() => addToCart(product.id)}>\r\n\t\t\t\t\t\t<GoPlus />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t\t<Col md={2} sm={6} xs={6} className={cartStyle.noPadding}>\r\n\t\t\t\t<div className={cartStyle.item__price}>\r\n\t\t\t\t\t{product.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}\r\n\t\t\t\t\t<FaRubleSign />\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t\t<Col md={1} sm={6} xs={6}>\r\n\t\t\t\t<div className={cartStyle.item__trash}>\r\n\t\t\t\t\t<OverlayTrigger\r\n\t\t\t\t\t\tkey=\"bottom\"\r\n\t\t\t\t\t\tplacement=\"bottom\"\r\n\t\t\t\t\t\toverlay={\r\n\t\t\t\t\t\t\t<Tooltip id=\"tooltip-bottom\">\r\n\t\t\t\t\t\t\t\t<strong>Убрать</strong>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FiTrash2\r\n\t\t\t\t\t\t\tonClick={() => dropFromCart(product.id)}\r\n\t\t\t\t\t\t\tsize={'1.6rem'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t</div>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t)\r\n}\r\n\r\nexport default CartItem\r\n","import React from 'react'\r\nimport { Button, Container, Row } from 'react-bootstrap'\r\nimport style from '../common/style/commonStyle.module.scss'\r\nimport CartItem from './CartItem'\r\nimport cartStyle from './Cart.module.scss'\r\nimport { connect } from 'react-redux'\r\nimport { ApplicationState } from '../../store/store'\r\nimport {\r\n\taddToCart,\r\n\tdropCart,\r\n\tdropFromCart,\r\n\tremoveFromCart\r\n} from '../../store/cart/action'\r\nimport { CartPosition } from '../../store/types'\r\nimport { Col } from 'react-bootstrap'\r\nimport { FaRubleSign } from 'react-icons/fa'\r\n\r\ninterface PropsFromDispatch {\r\n\tproducts: Array<CartPosition>\r\n\ttotalPrice: number\r\n}\r\n\r\ninterface PropsFromState {\r\n\taddToCart: (id: number) => any\r\n\tremoveFromCart: (id: number) => any\r\n\tdropFromCart: (id: number) => any\r\n\tdropCart: () => any\r\n}\r\n\r\ntype AllProps = PropsFromState & PropsFromDispatch\r\n\r\nconst Cart: React.FC<AllProps> = (props: AllProps) => {\r\n\tconst {\r\n\t\tproducts,\r\n\t\ttotalPrice,\r\n\t\taddToCart,\r\n\t\tremoveFromCart,\r\n\t\tdropFromCart,\r\n\t\tdropCart\r\n\t} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container>\r\n\t\t\t\t<h1 className={style.title_margin}>Корзина</h1>\r\n\t\t\t\t<div className={cartStyle.itemsList_margin}>\r\n\t\t\t\t\t{products.length > 0 ? (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{products.map((p, index) => (\r\n\t\t\t\t\t\t\t\t<CartItem\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\titem={p}\r\n\t\t\t\t\t\t\t\t\taddToCart={addToCart}\r\n\t\t\t\t\t\t\t\t\tremoveFromCart={removeFromCart}\r\n\t\t\t\t\t\t\t\t\tdropFromCart={dropFromCart}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t<Row className={cartStyle.bottomRow_margin}>\r\n\t\t\t\t\t\t\t\t<Col md={6} sm={12}>\r\n\t\t\t\t\t\t\t\t\t<div className={cartStyle.send}>\r\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"dark\" size=\"lg\" onClick={dropCart}>\r\n\t\t\t\t\t\t\t\t\t\t\tОтправть заказ\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t\t\t\t<div className={cartStyle.totalPrice}>\r\n\t\t\t\t\t\t\t\t\t\t{`Итого ${totalPrice\r\n\t\t\t\t\t\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t\t\t\t\t\t.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}`}\r\n\t\t\t\t\t\t\t\t\t\t<FaRubleSign />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<h1 className={cartStyle.emptyCart}>Корзина пуста</h1>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ cartPersist }: ApplicationState) => ({\r\n\tproducts: cartPersist.products,\r\n\ttotalPrice: cartPersist.totalPrice\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\taddToCart,\r\n\tremoveFromCart,\r\n\tdropFromCart,\r\n\tdropCart\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)\r\n","import React from 'react'\r\nimport { Toast } from 'react-bootstrap'\r\n\r\ntype MessageListProps = {\r\n\tid: number\r\n\ttext: string\r\n\tshowA: boolean\r\n\ttoggleShowA: (id: number) => void\r\n}\r\nconst MyMessage: React.FC<MessageListProps> = ({\r\n\tid,\r\n\ttext,\r\n\tshowA,\r\n\ttoggleShowA\r\n}: MessageListProps) => {\r\n\tconst date = new Date()\r\n\r\n\treturn (\r\n\t\t<Toast show={showA} onClose={() => toggleShowA(id)} delay={1500} autohide>\r\n\t\t\t<Toast.Header>\r\n\t\t\t\t<strong className=\"mr-auto\">CatalogApp</strong>\r\n\t\t\t\t<small>{`${date.getHours()}:${date.getMinutes()} ${date.toLocaleDateString()}`}</small>\r\n\t\t\t</Toast.Header>\r\n\t\t\t<Toast.Body>{text}</Toast.Body>\r\n\t\t</Toast>\r\n\t)\r\n}\r\nexport default MyMessage\r\n","import React from 'react'\nimport style from './MessageBox.module.scss'\nimport MyMessage from '../common/MyMessage/MyMessage'\nimport { Message } from '../../store/types'\nimport { ApplicationState } from '../../store/store'\nimport { hideMessageInState } from '../../store/message/action'\nimport { connect } from 'react-redux'\n\ninterface PropsFromDispatch {\n\thideMessage: (messageId: number) => any\n}\n\ninterface PropsFromState {\n\tmessage: Array<Message>\n}\n\ntype AllProps = PropsFromState & PropsFromDispatch\n\nconst MessageBox: React.FC<AllProps> = ({ message, hideMessage }: AllProps) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={`${style.messageBox} ${\n\t\t\t\t!message.length ? style.messageBox_none : ''\n\t\t\t}`}\n\t\t>\n\t\t\t{message.map((m, i) => (\n\t\t\t\t<MyMessage\n\t\t\t\t\tkey={`${m.id}${new Date().toLocaleString()}__${i}`}\n\t\t\t\t\tid={m.id}\n\t\t\t\t\ttext={m.text}\n\t\t\t\t\tshowA={m.isVisible}\n\t\t\t\t\ttoggleShowA={hideMessage}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = ({ messages }: ApplicationState) => ({\n\tmessage: messages.message\n})\n\nconst mapDispatchToProps = {\n\thideMessage: hideMessageInState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageBox)\n","import React from 'react'\nimport { ApplicationState, persistor } from '../store/store'\nimport { HashRouter, Route, withRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { compose, Store } from 'redux'\nimport Catalog from './Catalog/Catalog'\nimport Header from './Header/Header'\nimport Cart from './Cart/Cart'\nimport MessageBox from './MessageBox/MessageBox'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport MySpinner from './common/MySpinner/MySpinner'\n\ninterface MainProps {\n\tstore: Store<ApplicationState>\n}\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<MessageBox />\n\t\t\t<Route path={'/catalog'} render={() => <Catalog />} />\n\t\t\t<Route path={'/cart'} render={() => <Cart />} />\n\t\t</div>\n\t)\n}\n\nconst AppContainer = compose(withRouter)(App)\n\nconst AppDone: React.FC<MainProps> = ({ store }: MainProps) => (\n\t<HashRouter>\n\t\t<Provider store={store}>\n\t\t\t<PersistGate loading={<MySpinner />} persistor={persistor}>\n\t\t\t\t<AppContainer />\n\t\t\t</PersistGate>\n\t\t</Provider>\n\t</HashRouter>\n)\n\nexport default AppDone\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport AppDone from './Components/App'\nimport * as serviceWorker from './serviceWorker'\nimport store from './store/store'\n\nReactDOM.render(<AppDone store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}